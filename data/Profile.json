{
	"children": [
		{
			"name": "text",
			"path": "Profile.text",
			"parent": "Profile",
			"short": "Text summary of the resource, for human interpretation",
			"formal": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
			"min": 0,
			"max": "1",
			"synonym": [
				"narrative",
				"html",
				"xhtml",
				"display"
			],
			"type": "Narrative"
		},
		{
			"name": "contained",
			"path": "Profile.contained",
			"parent": "Profile",
			"short": "Contained, inline Resources",
			"formal": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
			"min": 0,
			"max": "*",
			"synonym": [
				"inline resources",
				"anonymous resources",
				"contained resources"
			],
			"type": "Resource",
			"leaf": true
		},
		{
			"name": "identifier",
			"path": "Profile.identifier",
			"parent": "Profile",
			"short": "Logical id to reference this profile",
			"formal": "The identifier that is used to identify this profile when it is referenced in a specification, model, design or an instance  (should be globally unique OID, UUID, or URI).",
			"min": 0,
			"max": "1",
			"type": "string",
			"leaf": true
		},
		{
			"name": "version",
			"path": "Profile.version",
			"parent": "Profile",
			"short": "Logical id for this version of the profile",
			"formal": "The identifier that is used to identify this version of the profile when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.",
			"min": 0,
			"max": "1",
			"type": "string",
			"leaf": true
		},
		{
			"name": "name",
			"path": "Profile.name",
			"parent": "Profile",
			"short": "Informal name for this profile",
			"formal": "A free text natural language name identifying the Profile.",
			"min": 1,
			"max": "1",
			"type": "string",
			"leaf": true
		},
		{
			"name": "publisher",
			"path": "Profile.publisher",
			"parent": "Profile",
			"short": "Name of the publisher (Organization or individual)",
			"formal": "Details of the individual or organization who accepts responsibility for publishing the profile.",
			"min": 0,
			"max": "1",
			"type": "string",
			"leaf": true
		},
		{
			"name": "telecom",
			"path": "Profile.telecom",
			"parent": "Profile",
			"short": "Contact information of the publisher",
			"formal": "Contact details to assist a user in finding and communicating with the publisher.",
			"min": 0,
			"max": "*",
			"type": "Contact"
		},
		{
			"name": "description",
			"path": "Profile.description",
			"parent": "Profile",
			"short": "Natural language description of the profile",
			"formal": "A free text natural language description of the profile and its use.",
			"min": 0,
			"max": "1",
			"type": "string",
			"leaf": true
		},
		{
			"name": "code",
			"path": "Profile.code",
			"parent": "Profile",
			"short": "Assist with indexing and finding",
			"formal": "A set of terms from external terminologies that may be used to assist with indexing and searching of templates.",
			"min": 0,
			"max": "*",
			"type": "Coding"
		},
		{
			"name": "status",
			"path": "Profile.status",
			"parent": "Profile",
			"short": "draft | active | retired",
			"formal": "The status of the profile.",
			"min": 1,
			"max": "1",
			"binding": {
				"name": "ResourceProfileStatus",
				"isExtensible": false,
				"conformance": "required",
				"referenceResource": {
					"reference": "http://hl7.org/fhir/vs/resource-profile-status"
				}
			},
			"type": "code",
			"leaf": true
		},
		{
			"name": "experimental",
			"path": "Profile.experimental",
			"parent": "Profile",
			"short": "If for testing purposes, not real usage",
			"formal": "This profile was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
			"min": 0,
			"max": "1",
			"type": "boolean",
			"leaf": true
		},
		{
			"name": "date",
			"path": "Profile.date",
			"parent": "Profile",
			"short": "Date for this version of the profile",
			"formal": "The date that this version of the profile was published.",
			"min": 0,
			"max": "1",
			"type": "dateTime",
			"leaf": true
		},
		{
			"name": "requirements",
			"path": "Profile.requirements",
			"parent": "Profile",
			"short": "Scope and Usage this profile is for",
			"formal": "The Scope and Usage that this profile was created to meet.",
			"min": 0,
			"max": "1",
			"type": "string",
			"leaf": true
		},
		{
			"name": "fhirVersion",
			"path": "Profile.fhirVersion",
			"parent": "Profile",
			"short": "FHIR Version this profile targets",
			"formal": "The version of the FHIR specification on which this profile is based.",
			"min": 0,
			"max": "1",
			"type": "id",
			"leaf": true
		},
		{
			"name": "mapping",
			"path": "Profile.mapping",
			"parent": "Profile",
			"short": "External specification that the content is mapped to",
			"formal": "An external specification that the content is mapped to.",
			"min": 0,
			"max": "*",
			"constraint": [
				{
					"key": "26",
					"severity": "error",
					"human": "Must have at a name or a uri (or both)",
					"xpath": "exists(f:uri) or exists(f:name)"
				}
			],
			"type": "none",
			"extendable": true,
			"children": [
				{
					"name": "identity",
					"path": "Profile.mapping.identity",
					"parent": "Profile.mapping",
					"short": "Internal id when this mapping is used",
					"formal": "An Internal id that is used to identify this mapping set when specific mappings are made.",
					"min": 1,
					"max": "1",
					"type": "id",
					"leaf": true
				},
				{
					"name": "uri",
					"path": "Profile.mapping.uri",
					"parent": "Profile.mapping",
					"short": "Identifies what this mapping refers to",
					"formal": "A URI that identifies the specification that this mapping is expressed to.",
					"min": 0,
					"max": "1",
					"type": "uri",
					"leaf": true
				},
				{
					"name": "name",
					"path": "Profile.mapping.name",
					"parent": "Profile.mapping",
					"short": "Names what this mapping refers to",
					"formal": "A name for the specification that is being mapped to.",
					"min": 0,
					"max": "1",
					"type": "string",
					"leaf": true
				},
				{
					"name": "comments",
					"path": "Profile.mapping.comments",
					"parent": "Profile.mapping",
					"short": "Versions, Issues, Scope limitations etc",
					"formal": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.",
					"min": 0,
					"max": "1",
					"type": "string",
					"leaf": true
				}
			]
		},
		{
			"name": "structure",
			"path": "Profile.structure",
			"parent": "Profile",
			"short": "A constraint on a resource or a data type",
			"formal": "A constraint statement about what contents a resource or data type may have.",
			"min": 0,
			"max": "*",
			"constraint": [
				{
					"key": "18",
					"severity": "error",
					"human": "Element paths must be unique - or not (LM)",
					"xpath": "count(f:element) >= count(distinct-values(f:element/f:path/@value))"
				},
				{
					"key": "29",
					"severity": "error",
					"human": "Parameter names must be unique within structure",
					"xpath": "count(distinct-values(f:searchParam/f:name/@value)) =count(f:searchParam/f:name)"
				},
				{
					"key": "12",
					"severity": "error",
					"human": "Only complex types can be constrained, not primitive types such as string etc.",
					"xpath": "upper-case(substring(f:type,1,1))=substring(f:type,1,1)"
				}
			],
			"type": "none",
			"extendable": true,
			"children": [
				{
					"name": "type",
					"path": "Profile.structure.type",
					"parent": "Profile.structure",
					"short": "The Resource or Data Type being described",
					"formal": "The Resource or Data type being described.",
					"min": 1,
					"max": "1",
					"binding": {
						"name": "FHIRDefinedType",
						"isExtensible": false,
						"conformance": "required",
						"referenceResource": {
							"reference": "http://hl7.org/fhir/defined-types"
						}
					},
					"type": "code",
					"leaf": true
				},
				{
					"name": "name",
					"path": "Profile.structure.name",
					"parent": "Profile.structure",
					"short": "Name for this particular structure (reference target)",
					"formal": "The name of this resource constraint statement (to refer to it from other resource constraints - from Profile.structure.element.definition.type.profile).",
					"min": 0,
					"max": "1",
					"type": "string",
					"leaf": true
				},
				{
					"name": "publish",
					"path": "Profile.structure.publish",
					"parent": "Profile.structure",
					"short": "This definition is published (i.e. for validation)",
					"formal": "This definition of a profile on a structure is published as a formal statement. Some structural definitions might be defined purely for internal use within the profile, and not intended to be used outside that context.",
					"min": 0,
					"max": "1",
					"type": "boolean",
					"leaf": true
				},
				{
					"name": "purpose",
					"path": "Profile.structure.purpose",
					"parent": "Profile.structure",
					"short": "Human summary: why describe this resource?",
					"formal": "Human summary: why describe this resource?.",
					"min": 0,
					"max": "1",
					"type": "string",
					"leaf": true
				},
				{
					"name": "element",
					"path": "Profile.structure.element",
					"parent": "Profile.structure",
					"short": "Definition of elements in the resource (if no profile)",
					"formal": "Captures constraints on each element within the resource.",
					"min": 0,
					"max": "*",
					"constraint": [
						{
							"key": "21",
							"severity": "error",
							"human": "An element that's a slicing descriptor must not be preceded by an element that starts with the same path and must be followed by an element with exactly the same path.",
							"xpath": "not(f:slicing) or (not(starts-with(preceding-sibling::f:element[1]/f:path/@value, current()/f:path/@value)) and following-sibling::f:element[1]/f:path/@value=current()/f:path/@value)"
						},
						{
							"key": "20",
							"severity": "error",
							"human": "An element must either be a definition or a slicing descriptor, never both.",
							"xpath": "exists(f:slicing)!=exists(f:definition)"
						},
						{
							"key": "11",
							"severity": "error",
							"human": "Must have either a slice or a definition, but not both",
							"xpath": "exists(f:slicing) != exists(f:definition)"
						}
					],
					"type": "none",
					"extendable": true,
					"children": [
						{
							"name": "path",
							"path": "Profile.structure.element.path",
							"parent": "Profile.structure.element",
							"short": "The path of the element (see the formal definitions)",
							"formal": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource.",
							"min": 1,
							"max": "1",
							"type": "string",
							"leaf": true
						},
						{
							"name": "representation",
							"path": "Profile.structure.element.representation",
							"parent": "Profile.structure.element",
							"short": "How this element is represented in instances",
							"formal": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
							"min": 0,
							"max": "*",
							"binding": {
								"name": "PropertyRepresentation",
								"isExtensible": false,
								"conformance": "required",
								"referenceResource": {
									"reference": "http://hl7.org/fhir/vs/property-representation"
								}
							},
							"type": "code",
							"leaf": true
						},
						{
							"name": "name",
							"path": "Profile.structure.element.name",
							"parent": "Profile.structure.element",
							"short": "Name for this particular element definition (reference target)",
							"formal": "The name of this element definition (to refer to it from other element definitions using Profile.structure.element.definition.nameReference). This is a unique name referring to a specific set of constraints applied to this element. One use of this is to provide a name to different slices of the same element.",
							"min": 0,
							"max": "1",
							"type": "string",
							"leaf": true
						},
						{
							"name": "slicing",
							"path": "Profile.structure.element.slicing",
							"parent": "Profile.structure.element",
							"short": "This element is sliced - slices follow",
							"formal": "Indicates that the element is sliced into a set of alternative definitions (there are multiple definitions on a single element in the base resource). The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
							"min": 0,
							"max": "1",
							"type": "none",
							"extendable": true,
							"children": [
								{
									"name": "discriminator",
									"path": "Profile.structure.element.slicing.discriminator",
									"parent": "Profile.structure.element.slicing",
									"short": "Element that used to distinguish the slices",
									"formal": "Designates which child element is used to discriminate between the slices when processing an instance. The value of the child element in the instance SHALL completely distinguish which slice the element in the resource matches based on the allowed values for that element in each of the slices.",
									"min": 1,
									"max": "1",
									"type": "id",
									"leaf": true
								},
								{
									"name": "ordered",
									"path": "Profile.structure.element.slicing.ordered",
									"parent": "Profile.structure.element.slicing",
									"short": "If elements must be in same order as slices",
									"formal": "If the matching elements have to occur in the same order as defined in the profile.",
									"min": 1,
									"max": "1",
									"type": "boolean",
									"leaf": true
								},
								{
									"name": "rules",
									"path": "Profile.structure.element.slicing.rules",
									"parent": "Profile.structure.element.slicing",
									"short": "closed | open | openAtEnd",
									"formal": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
									"min": 1,
									"max": "1",
									"binding": {
										"name": "SlicingRules",
										"isExtensible": false,
										"conformance": "required",
										"referenceResource": {
											"reference": "http://hl7.org/fhir/vs/resource-slicing-rules"
										}
									},
									"type": "code",
									"leaf": true
								}
							]
						},
						{
							"name": "definition",
							"path": "Profile.structure.element.definition",
							"parent": "Profile.structure.element",
							"short": "More specific definition of the element",
							"formal": "Definition of the content of the element to provide a more specific definition than that contained for the element in the base resource.",
							"min": 0,
							"max": "1",
							"constraint": [
								{
									"key": "2",
									"severity": "error",
									"human": "Either a namereference or a fixed value (but not both) is permitted",
									"xpath": "not(exists(f:nameReference) and exists(f:*[starts-with(local-name(.), 'value')]))"
								},
								{
									"key": "10",
									"severity": "error",
									"human": "Value may only be specified if the type consists of a single repetition that has a type corresponding to one of the primitive data types.",
									"xpath": "not(exists(f:*[starts-with(local-name(.), 'value')])) or (count(f:type)=1 and f:type/f:code[substring(@value,1,1)=lower-case(substring(@value,1,1))])"
								},
								{
									"key": "7",
									"severity": "error",
									"human": "Binding can only be present for coded elements",
									"xpath": "not(exists(f:binding)) or f:type/f:code/@value=('code','Coding','CodeableConcept','Quantity')"
								},
								{
									"key": "19",
									"severity": "error",
									"human": "Element names must be unique",
									"xpath": "count(f:element[f:name]) = count(distinct-values(f:element/f:name/@value))"
								},
								{
									"key": "22",
									"severity": "error",
									"human": "If a definition has multiple types with the same code, each must specify a profile",
									"xpath": "count(f:type[not(f:profile)]) = count(distinct-values(f:type[not(f:profile)]/f:code/@value))"
								},
								{
									"key": "23",
									"severity": "error",
									"human": "Types must be unique by the combination of code and profile",
									"xpath": "not(exists(for $type in f:type return $type/preceding-sibling::f:type[f:code/@value=$type/f:code/@value and f:profile/@value = $type/f:profile/@value]))"
								},
								{
									"key": "24",
									"severity": "error",
									"human": "Constraints must be unique by key",
									"xpath": "count(f:constraint) = count(distinct-values(f:constraint/f:key/@value))"
								},
								{
									"key": "25",
									"severity": "error",
									"human": "Constraint names must be unique.",
									"xpath": "count(f:constraint[f:name]) = count(distinct-values(f:constraint/f:name/@value))"
								}
							],
							"type": "none",
							"extendable": true,
							"children": [
								{
									"name": "short",
									"path": "Profile.structure.element.definition.short",
									"parent": "Profile.structure.element.definition",
									"short": "Concise definition for xml presentation",
									"formal": "A concise definition that  is shown in the generated XML format that summarizes profiles (used throughout the specification).",
									"min": 1,
									"max": "1",
									"type": "string",
									"leaf": true
								},
								{
									"name": "formal",
									"path": "Profile.structure.element.definition.formal",
									"parent": "Profile.structure.element.definition",
									"short": "Full formal definition in human language",
									"formal": "The definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource.",
									"min": 1,
									"max": "1",
									"type": "string",
									"leaf": true
								},
								{
									"name": "comments",
									"path": "Profile.structure.element.definition.comments",
									"parent": "Profile.structure.element.definition",
									"short": "Comments about the use of this element",
									"formal": "Comments about the use of the element, including notes about how to use the data properly, exceptions to proper use, etc.",
									"min": 0,
									"max": "1",
									"type": "string",
									"leaf": true
								},
								{
									"name": "requirements",
									"path": "Profile.structure.element.definition.requirements",
									"parent": "Profile.structure.element.definition",
									"short": "Why is this needed?",
									"formal": "Explains why this element is needed and why it's been constrained as it has.",
									"min": 0,
									"max": "1",
									"type": "string",
									"leaf": true
								},
								{
									"name": "synonym",
									"path": "Profile.structure.element.definition.synonym",
									"parent": "Profile.structure.element.definition",
									"short": "Other names",
									"formal": "Identifies additional names by which this element might also be known.",
									"min": 0,
									"max": "*",
									"type": "string",
									"leaf": true
								},
								{
									"name": "min",
									"path": "Profile.structure.element.definition.min",
									"parent": "Profile.structure.element.definition",
									"short": "Minimum Cardinality",
									"formal": "The minimum number of times this element SHALL appear in the instance.",
									"min": 1,
									"max": "1",
									"type": "integer",
									"leaf": true
								},
								{
									"name": "max",
									"path": "Profile.structure.element.definition.max",
									"parent": "Profile.structure.element.definition",
									"short": "Maximum Cardinality (a number or *)",
									"formal": "The maximum number of times this element is permitted to appear in the instance.",
									"min": 1,
									"max": "1",
									"constraint": [
										{
											"key": "6",
											"severity": "error",
											"human": "Max SHALL be a number or \"*\"",
											"xpath": "@value='*' or (normalize-space(@value)!='' and normalize-space(translate(@value, '0123456789',''))='')"
										}
									],
									"type": "string",
									"leaf": true
								},
								{
									"name": "type",
									"path": "Profile.structure.element.definition.type",
									"parent": "Profile.structure.element.definition",
									"short": "Data type and Profile for this element",
									"formal": "The data type or resource that the value of this element is permitted to be.",
									"min": 0,
									"max": "*",
									"constraint": [
										{
											"key": "9",
											"severity": "error",
											"human": "Aggregation may only be specified if one of the allowed types for the element is a resource",
											"xpath": "not(exists(f:aggregation)) or exists(f:code[starts-with(@value, 'Resource(')])"
										}
									],
									"type": "none",
									"extendable": true,
									"children": [
										{
											"name": "code",
											"path": "Profile.structure.element.definition.type.code",
											"parent": "Profile.structure.element.definition.type",
											"short": "Name of Data type or Resource",
											"formal": "Name of Data type or Resource.",
											"min": 1,
											"max": "1",
											"binding": {
												"name": "DataType",
												"isExtensible": false,
												"conformance": "required",
												"referenceResource": {
													"reference": "http://hl7.org/fhir/data-types"
												}
											},
											"type": "code",
											"leaf": true
										},
										{
											"name": "profile",
											"path": "Profile.structure.element.definition.type.profile",
											"parent": "Profile.structure.element.definition.type",
											"short": "Profile.structure to apply",
											"formal": "Identifies a profile that SHALL hold for resources or datatypes referenced as the type of this element. Can be a local reference - to another structure in this profile, or a reference to a structure in another profile.",
											"min": 0,
											"max": "1",
											"type": "uri",
											"leaf": true
										},
										{
											"name": "aggregation",
											"path": "Profile.structure.element.definition.type.aggregation",
											"parent": "Profile.structure.element.definition.type",
											"short": "contained | referenced | bundled - how aggregated",
											"formal": "If the type is a reference to another resource, how the resource is or can be aggreated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
											"min": 0,
											"max": "*",
											"binding": {
												"name": "AggregationMode",
												"isExtensible": false,
												"conformance": "required",
												"referenceResource": {
													"reference": "http://hl7.org/fhir/vs/resource-aggregation-mode"
												}
											},
											"type": "code",
											"leaf": true
										}
									]
								},
								{
									"name": "nameReference",
									"path": "Profile.structure.element.definition.nameReference",
									"parent": "Profile.structure.element.definition",
									"short": "To another element constraint (by element.name)",
									"formal": "Identifies the name of a slice defined elsewhere in the profile whose constraints should be applied to the current element.",
									"min": 0,
									"max": "1",
									"type": "string",
									"leaf": true
								},
								{
									"name": "value",
									"path": "Profile.structure.element.definition.value[x]",
									"parent": "Profile.structure.element.definition",
									"short": "Fixed value: [as defined for a primitive type]",
									"formal": "Specifies a primitive value that SHALL hold for this element in the instance.",
									"min": 0,
									"max": "1",
									"type": "*"
								},
								{
									"name": "example",
									"path": "Profile.structure.element.definition.example[x]",
									"parent": "Profile.structure.element.definition",
									"short": "Example value: [as defined for type]",
									"formal": "An example value for this element.",
									"min": 0,
									"max": "1",
									"type": "*"
								},
								{
									"name": "maxLength",
									"path": "Profile.structure.element.definition.maxLength",
									"parent": "Profile.structure.element.definition",
									"short": "Length for strings",
									"formal": "Indicates the shortest length that SHALL be supported by conformant instances without truncation.",
									"min": 0,
									"max": "1",
									"type": "integer",
									"leaf": true
								},
								{
									"name": "condition",
									"path": "Profile.structure.element.definition.condition",
									"parent": "Profile.structure.element.definition",
									"short": "Reference to invariant about presence",
									"formal": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
									"min": 0,
									"max": "*",
									"type": "id",
									"leaf": true
								},
								{
									"name": "constraint",
									"path": "Profile.structure.element.definition.constraint",
									"parent": "Profile.structure.element.definition",
									"short": "Condition that must evaluate to true",
									"formal": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
									"min": 0,
									"max": "*",
									"type": "none",
									"extendable": true,
									"children": [
										{
											"name": "key",
											"path": "Profile.structure.element.definition.constraint.key",
											"parent": "Profile.structure.element.definition.constraint",
											"short": "Target of 'condition' reference above",
											"formal": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.",
											"min": 1,
											"max": "1",
											"type": "id",
											"leaf": true
										},
										{
											"name": "name",
											"path": "Profile.structure.element.definition.constraint.name",
											"parent": "Profile.structure.element.definition.constraint",
											"short": "Short human label",
											"formal": "Used to label the constraint in OCL or in short displays incapable of displaying the full human description.",
											"min": 0,
											"max": "1",
											"type": "string",
											"leaf": true
										},
										{
											"name": "severity",
											"path": "Profile.structure.element.definition.constraint.severity",
											"parent": "Profile.structure.element.definition.constraint",
											"short": "error | warning",
											"formal": "Identifies the impact constraint violation has on the conformance of the instance.",
											"min": 1,
											"max": "1",
											"binding": {
												"name": "ConstraintSeverity",
												"isExtensible": false,
												"conformance": "required",
												"referenceResource": {
													"reference": "http://hl7.org/fhir/vs/constraint-severity"
												}
											},
											"type": "code",
											"leaf": true
										},
										{
											"name": "human",
											"path": "Profile.structure.element.definition.constraint.human",
											"parent": "Profile.structure.element.definition.constraint",
											"short": "Human description of constraint",
											"formal": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.",
											"min": 1,
											"max": "1",
											"type": "string",
											"leaf": true
										},
										{
											"name": "xpath",
											"path": "Profile.structure.element.definition.constraint.xpath",
											"parent": "Profile.structure.element.definition.constraint",
											"short": "XPath expression of constraint",
											"formal": "XPath expression of constraint.",
											"min": 1,
											"max": "1",
											"type": "string",
											"leaf": true
										}
									]
								},
								{
									"name": "mustSupport",
									"path": "Profile.structure.element.definition.mustSupport",
									"parent": "Profile.structure.element.definition",
									"short": "If the element must supported",
									"formal": "If true, conformant resource authors SHALL be capable of providing a value for the element and resource consumers SHALL be capable of extracting and doing something useful with the data element.  If false, the element may be ignored and not supported.",
									"min": 0,
									"max": "1",
									"type": "boolean",
									"leaf": true
								},
								{
									"name": "isModifier",
									"path": "Profile.structure.element.definition.isModifier",
									"parent": "Profile.structure.element.definition",
									"short": "If this modifies the meaning of other elements",
									"formal": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
									"min": 1,
									"max": "1",
									"type": "boolean",
									"leaf": true
								},
								{
									"name": "binding",
									"path": "Profile.structure.element.definition.binding",
									"parent": "Profile.structure.element.definition",
									"short": "ValueSet details if this is coded",
									"formal": "Binds to a value set if this element is coded (code, Coding, CodeableConcept).",
									"min": 0,
									"max": "1",
									"constraint": [
										{
											"key": "3",
											"severity": "error",
											"human": "provide either a reference or a description (or both)",
											"xpath": "(exists(f:referenceUri) or exists(f:referenceResource)) or exists(f:description)"
										},
										{
											"key": "14",
											"severity": "error",
											"human": "Example value sets are always extensible",
											"xpath": "not(f:Conformance/value='example' and f:isExtensible.value='false')"
										}
									],
									"type": "none",
									"extendable": true,
									"children": [
										{
											"name": "name",
											"path": "Profile.structure.element.definition.binding.name",
											"parent": "Profile.structure.element.definition.binding",
											"short": "Descriptive Name",
											"formal": "A descriptive name for this - can be useful for generating implementation artifacts.",
											"min": 1,
											"max": "1",
											"type": "string",
											"leaf": true
										},
										{
											"name": "isExtensible",
											"path": "Profile.structure.element.definition.binding.isExtensible",
											"parent": "Profile.structure.element.definition.binding",
											"short": "Can additional codes be used?",
											"formal": "If true, then conformant systems may use additional codes or (where the data type permits) text alone to convey concepts not covered by the set of codes identified in the binding.  If false, then conformant systems are constrained to the provided codes alone.",
											"min": 1,
											"max": "1",
											"type": "boolean",
											"leaf": true
										},
										{
											"name": "conformance",
											"path": "Profile.structure.element.definition.binding.conformance",
											"parent": "Profile.structure.element.definition.binding",
											"short": "required | preferred | example",
											"formal": "Indicates the degree of conformance expectations associated with this binding.",
											"min": 0,
											"max": "1",
											"binding": {
												"name": "BindingConformance",
												"isExtensible": false,
												"conformance": "required",
												"referenceResource": {
													"reference": "http://hl7.org/fhir/vs/binding-conformance"
												}
											},
											"type": "code",
											"leaf": true
										},
										{
											"name": "description",
											"path": "Profile.structure.element.definition.binding.description",
											"parent": "Profile.structure.element.definition.binding",
											"short": "Human explanation of the value set",
											"formal": "Describes the intended use of this particular set of codes.",
											"min": 0,
											"max": "1",
											"type": "string",
											"leaf": true
										},
										{
											"name": "reference",
											"path": "Profile.structure.element.definition.binding.reference[x]",
											"parent": "Profile.structure.element.definition.binding",
											"short": "Source of value set",
											"formal": "Points to the value set or external definition that identifies the set of codes to be used.",
											"min": 0,
											"max": "1",
											"constraint": [
												{
													"key": "13",
													"severity": "error",
													"human": "uri SHALL start with http:// or https://",
													"xpath": "starts-with(@value, 'http:') or starts-with(@value, 'https:')"
												}
											],
											"type": "multitype",
											"children": [
												{
													"name": "referenceUri",
													"parent": "Profile.structure.element.definition.binding.reference[x]",
													"path": "Profile.structure.element.definition.binding.reference[x].referenceUri",
													"short": "Source of value set",
													"formal": "Points to the value set or external definition that identifies the set of codes to be used.",
													"min": 0,
													"max": "1",
													"type": "uri",
													"leaf": true
												},
												{
													"name": "ValueSet",
													"parent": "Profile.structure.element.definition.binding.reference[x]",
													"path": "Profile.structure.element.definition.binding.reference[x].ValueSet",
													"short": "Source of value set",
													"formal": "Points to the value set or external definition that identifies the set of codes to be used.",
													"min": 0,
													"max": "1",
													"type": "ResourceReference",
													"reference": "ValueSet"
												}
											]
										}
									]
								},
								{
									"name": "mapping",
									"path": "Profile.structure.element.definition.mapping",
									"parent": "Profile.structure.element.definition",
									"short": "Map element to another set of definitions",
									"formal": "Identifies a concept from an external specification that roughly corresponds to this element.",
									"min": 0,
									"max": "*",
									"type": "none",
									"extendable": true,
									"children": [
										{
											"name": "identity",
											"path": "Profile.structure.element.definition.mapping.identity",
											"parent": "Profile.structure.element.definition.mapping",
											"short": "Reference to mapping declaration",
											"formal": "An internal reference to the definition of a mapping.",
											"min": 1,
											"max": "1",
											"type": "id",
											"leaf": true
										},
										{
											"name": "map",
											"path": "Profile.structure.element.definition.mapping.map",
											"parent": "Profile.structure.element.definition.mapping",
											"short": "Details of the mapping",
											"formal": "Expresses what part of the target specification corresponds to this element.",
											"min": 1,
											"max": "1",
											"type": "string",
											"leaf": true
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "searchParam",
					"path": "Profile.structure.searchParam",
					"parent": "Profile.structure",
					"short": "Search params defined",
					"formal": "Additional search parameters for implementations to support and/or make use of.",
					"min": 0,
					"max": "*",
					"type": "none",
					"extendable": true,
					"children": [
						{
							"name": "name",
							"path": "Profile.structure.searchParam.name",
							"parent": "Profile.structure.searchParam",
							"short": "Name of search parameter",
							"formal": "The name of the standard or custom search parameter.",
							"min": 1,
							"max": "1",
							"type": "string",
							"leaf": true
						},
						{
							"name": "type",
							"path": "Profile.structure.searchParam.type",
							"parent": "Profile.structure.searchParam",
							"short": "number | date | string | token | reference | composite | quantity",
							"formal": "The type of value a search parameter refers to, and how the content is interpreted.",
							"min": 1,
							"max": "1",
							"binding": {
								"name": "SearchParamType",
								"isExtensible": false,
								"conformance": "required",
								"referenceResource": {
									"reference": "http://hl7.org/fhir/vs/search-param-type"
								}
							},
							"type": "code",
							"leaf": true
						},
						{
							"name": "documentation",
							"path": "Profile.structure.searchParam.documentation",
							"parent": "Profile.structure.searchParam",
							"short": "Contents and meaning of search parameter",
							"formal": "A specification for search parameters. For standard parameters, provides additional information on how the parameter is used in this solution.  For custom parameters, provides a description of what the parameter does.",
							"min": 1,
							"max": "1",
							"type": "string",
							"leaf": true
						},
						{
							"name": "xpath",
							"path": "Profile.structure.searchParam.xpath",
							"parent": "Profile.structure.searchParam",
							"short": "XPath that extracts the parameter set",
							"formal": "An XPath expression that returns a set of elements for the search parameter.",
							"min": 0,
							"max": "1",
							"type": "string",
							"leaf": true
						},
						{
							"name": "target",
							"path": "Profile.structure.searchParam.target",
							"parent": "Profile.structure.searchParam",
							"short": "Types of resource (if a resource reference)",
							"formal": "Types of resource (if a resource is referenced).",
							"min": 0,
							"max": "*",
							"binding": {
								"name": "ResourceType",
								"isExtensible": false,
								"conformance": "required",
								"referenceResource": {
									"reference": "http://hl7.org/fhir/resource-types"
								}
							},
							"type": "code",
							"leaf": true
						}
					]
				}
			]
		},
		{
			"name": "extensionDefn",
			"path": "Profile.extensionDefn",
			"parent": "Profile",
			"short": "Definition of an extension",
			"formal": "An extension defined as part of the profile.",
			"min": 0,
			"max": "*",
			"type": "none",
			"extendable": true,
			"children": [
				{
					"name": "code",
					"path": "Profile.extensionDefn.code",
					"parent": "Profile.extensionDefn",
					"short": "Identifies the extension in this profile",
					"formal": "A unique code (within the profile) used to identify the extension.",
					"min": 1,
					"max": "1",
					"constraint": [
						{
							"key": "5",
							"severity": "error",
							"human": "Codes SHALL be unique in the context of a profile",
							"xpath": "count(ancestor::f:Profile/f:extensionDefn/f:code[@value=current()/@value])=1"
						}
					],
					"type": "code",
					"leaf": true
				},
				{
					"name": "display",
					"path": "Profile.extensionDefn.display",
					"parent": "Profile.extensionDefn",
					"short": "Use this name when displaying the value",
					"formal": "Defined so that applications can use this name when displaying the value of the extension to the user.",
					"min": 0,
					"max": "1",
					"type": "string",
					"leaf": true
				},
				{
					"name": "contextType",
					"path": "Profile.extensionDefn.contextType",
					"parent": "Profile.extensionDefn",
					"short": "resource | datatype | mapping | extension",
					"formal": "Identifies the type of context to which the extension applies.",
					"min": 1,
					"max": "1",
					"binding": {
						"name": "ExtensionContext",
						"isExtensible": false,
						"conformance": "required",
						"referenceResource": {
							"reference": "http://hl7.org/fhir/vs/extension-context"
						}
					},
					"type": "code",
					"leaf": true
				},
				{
					"name": "context",
					"path": "Profile.extensionDefn.context",
					"parent": "Profile.extensionDefn",
					"short": "Where the extension can be used in instances",
					"formal": "Identifies the types of resource or data type elements to which the extension can be applied.",
					"min": 1,
					"max": "*",
					"type": "string",
					"leaf": true
				},
				{
					"name": "definition",
					"path": "Profile.extensionDefn.definition",
					"parent": "Profile.extensionDefn",
					"short": "Definition of the extension and its content",
					"formal": "Definition of the extension and its content.",
					"min": 1,
					"max": "1",
					"type": "none"
				}
			]
		},
		{
			"name": "query",
			"path": "Profile.query",
			"parent": "Profile",
			"short": "Definition of a named query",
			"formal": "Definition of a named query and its parameters and their meaning.",
			"min": 0,
			"max": "*",
			"type": "none",
			"extendable": true,
			"children": [
				{
					"name": "name",
					"path": "Profile.query.name",
					"parent": "Profile.query",
					"short": "Special named queries (_query=)",
					"formal": "The name of a query, which is used in the URI from Conformance statements declaring use of the query.  Typically this will also be the name for the _query parameter when the query is called, though in some cases it may be aliased by a server to avoid collisions.",
					"min": 1,
					"max": "1",
					"type": "string",
					"leaf": true
				},
				{
					"name": "documentation",
					"path": "Profile.query.documentation",
					"parent": "Profile.query",
					"short": "Describes the named query",
					"formal": "Description of the query - the functionality it offers, and considerations about how it functions and to use it.",
					"min": 1,
					"max": "1",
					"type": "string",
					"leaf": true
				},
				{
					"name": "parameter",
					"path": "Profile.query.parameter",
					"parent": "Profile.query",
					"short": "Parameter for the named query",
					"formal": "A parameter of a named query.",
					"min": 0,
					"max": "*",
					"type": "none"
				}
			]
		}
	],
	"success": true
}