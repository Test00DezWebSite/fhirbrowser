{
	"children": [
		{
			"name": "event",
			"path": "Schedule.event",
			"parent": "Schedule",
			"short": "When the event occurs",
			"formal": "Identifies specific time periods when the event should occur.",
			"min": 0,
			"max": "*",
			"type": "Period",
			"children": [
				{
					"name": "start",
					"path": "Period.start",
					"parent": "Period",
					"short": "Starting time with inclusive boundary",
					"formal": "The start of the period. The boundary is inclusive.",
					"min": 0,
					"max": "1",
					"type": "dateTime",
					"leaf": true
				},
				{
					"name": "end",
					"path": "Period.end",
					"parent": "Period",
					"short": "End time with inclusive boundary, if not ongoing",
					"formal": "The end of the period. If the end of the period is missing, it means that the period is ongoing.",
					"min": 0,
					"max": "1",
					"type": "dateTime",
					"leaf": true
				}
			]
		},
		{
			"name": "repeat",
			"path": "Schedule.repeat",
			"parent": "Schedule",
			"short": "Only if there is none or one event",
			"formal": "Identifies a repeating pattern to the intended time periods.",
			"min": 0,
			"max": "1",
			"constraint": [
				{
					"key": "3",
					"name": "End condition",
					"severity": "error",
					"human": "At most, only one of count or end can be present",
					"xpath": "not(exists(f:count) and exists(f:end))"
				},
				{
					"key": "2",
					"name": "Repeat cycle",
					"severity": "error",
					"human": "Either frequency or when SHALL be present, but not both",
					"xpath": "exists(f:frequency) != exists(f:when)"
				}
			],
			"type": "none",
			"extendable": true,
			"children": [
				{
					"name": "frequency",
					"path": "Schedule.repeat.frequency",
					"parent": "Schedule.repeat",
					"short": "Event occurs frequency times per duration",
					"formal": "Indicates how often the event should occur.",
					"min": 0,
					"max": "1",
					"type": "integer",
					"leaf": true
				},
				{
					"name": "when",
					"path": "Schedule.repeat.when",
					"parent": "Schedule.repeat",
					"short": "HS | WAKE | AC | ACM | ACD | ACV | PC | PCM | PCD | PCV - common life events",
					"formal": "Identifies the occurrence of daily life that determines timing.",
					"min": 0,
					"max": "1",
					"binding": {
						"name": "EventTiming",
						"isExtensible": false,
						"conformance": "required",
						"referenceResource": {
							"reference": "http://hl7.org/fhir/vs/event-timing"
						}
					},
					"type": "code",
					"leaf": true
				},
				{
					"name": "duration",
					"path": "Schedule.repeat.duration",
					"parent": "Schedule.repeat",
					"short": "Repeating or event-related duration",
					"formal": "How long each repetition should last.",
					"min": 1,
					"max": "1",
					"constraint": [
						{
							"key": "4",
							"name": "Duration Positive",
							"severity": "error",
							"human": "duration SHALL be a positive value",
							"xpath": "@value > 0 or not(@value)"
						}
					],
					"type": "decimal",
					"leaf": true
				},
				{
					"name": "units",
					"path": "Schedule.repeat.units",
					"parent": "Schedule.repeat",
					"short": "s | min | h | d | wk | mo | a - unit of time (UCUM)",
					"formal": "The units of time for the duration.",
					"min": 1,
					"max": "1",
					"binding": {
						"name": "UnitsOfTime",
						"isExtensible": false,
						"conformance": "required",
						"referenceResource": {
							"reference": "http://hl7.org/fhir/vs/units-of-time"
						}
					},
					"type": "code",
					"leaf": true
				},
				{
					"name": "count",
					"path": "Schedule.repeat.count",
					"parent": "Schedule.repeat",
					"short": "Number of times to repeat",
					"formal": "A total count of the desired number of repetitions.",
					"min": 0,
					"max": "1",
					"type": "integer",
					"leaf": true
				},
				{
					"name": "end",
					"path": "Schedule.repeat.end",
					"parent": "Schedule.repeat",
					"short": "When to stop repeats",
					"formal": "When to stop repeating the schedule.",
					"min": 0,
					"max": "1",
					"type": "dateTime",
					"leaf": true
				}
			]
		}
	],
	"success": true
}